package icalc;


import java.awt.ComponentOrientation;
import javax.swing.JOptionPane; // for InputDialog

/**
 *
 * @author bushra
 */
public class frmMatrix extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    public frmMatrix()
    {
        initComponents();
        
        
        this.setLocationRelativeTo(null); // for centering form on screen 
        
        
        btnMatB.setEnabled(false);
        btnMatA.setEnabled(true);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(false);
    }
    

    
    MatrixCalculator cal;
    int[][] matrixA;
    int[][] matrixB;
    int rowsOfMatrixA;
    int colsOfMatrixA;
    int rowsOfMatrixB;
    int colsOfMatrixB;
    
    String operator;
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnMultiply = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnSubtract = new javax.swing.JButton();
        btnAC = new javax.swing.JButton();
        btnMatB = new javax.swing.JButton();
        btnMatA = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfDigitScreen = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnFile = new javax.swing.JMenu();
        btnExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        btnBasic = new javax.swing.JMenuItem();
        btnTrigonometric = new javax.swing.JMenuItem();
        btnBinary = new javax.swing.JMenuItem();
        btnLogarithmic = new javax.swing.JMenuItem();
        btnRadical = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnMultiply.setBackground(new java.awt.Color(255, 153, 0));
        btnMultiply.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnMultiply.setForeground(new java.awt.Color(255, 255, 255));
        btnMultiply.setText("X");
        btnMultiply.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 153, 0));
        btnAdd.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("+");
        btnAdd.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEquals.setBackground(new java.awt.Color(255, 153, 0));
        btnEquals.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnEquals.setForeground(new java.awt.Color(255, 255, 255));
        btnEquals.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnEquals.setLabel("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });

        btnSubtract.setBackground(new java.awt.Color(255, 153, 0));
        btnSubtract.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnSubtract.setForeground(new java.awt.Color(255, 255, 255));
        btnSubtract.setText("-");
        btnSubtract.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtractActionPerformed(evt);
            }
        });

        btnAC.setBackground(new java.awt.Color(102, 102, 102));
        btnAC.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAC.setForeground(new java.awt.Color(255, 255, 255));
        btnAC.setText("AC");
        btnAC.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnACActionPerformed(evt);
            }
        });

        btnMatB.setBackground(new java.awt.Color(102, 102, 102));
        btnMatB.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnMatB.setForeground(new java.awt.Color(255, 255, 255));
        btnMatB.setText("MAT [B]");
        btnMatB.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnMatB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatBActionPerformed(evt);
            }
        });

        btnMatA.setBackground(new java.awt.Color(102, 102, 102));
        btnMatA.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnMatA.setForeground(new java.awt.Color(255, 255, 255));
        btnMatA.setText("MAT [A]");
        btnMatA.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnMatA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatAActionPerformed(evt);
            }
        });

        tfDigitScreen.setEditable(false);
        tfDigitScreen.setBackground(new java.awt.Color(102, 102, 102));
        tfDigitScreen.setColumns(20);
        tfDigitScreen.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        tfDigitScreen.setForeground(new java.awt.Color(204, 204, 204));
        tfDigitScreen.setRows(5);
        jScrollPane1.setViewportView(tfDigitScreen);

        btnFile.setText("File");

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        btnFile.add(btnExit);

        jMenuBar1.add(btnFile);

        jMenu2.setText("Mode");

        btnBasic.setText("Basic");
        btnBasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBasicActionPerformed(evt);
            }
        });
        jMenu2.add(btnBasic);

        btnTrigonometric.setText("Trigonometric");
        btnTrigonometric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrigonometricActionPerformed(evt);
            }
        });
        jMenu2.add(btnTrigonometric);

        btnBinary.setText("Binary");
        btnBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryActionPerformed(evt);
            }
        });
        jMenu2.add(btnBinary);

        btnLogarithmic.setText("Logarithmic");
        btnLogarithmic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogarithmicActionPerformed(evt);
            }
        });
        jMenu2.add(btnLogarithmic);

        btnRadical.setText("Radical");
        btnRadical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRadicalActionPerformed(evt);
            }
        });
        jMenu2.add(btnRadical);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAC, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(btnMatA, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMatB, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEquals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMatA, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMatB, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAC, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnACActionPerformed
        // TODO add your handling code here:
        
        tfDigitScreen.setText("");
        matrixA=null;
        matrixB=null;
        rowsOfMatrixA=0;
        colsOfMatrixA=0;
        rowsOfMatrixB=0;
        colsOfMatrixB=0;
        cal.ClearAll();
        
        btnMatA.setEnabled(true);
    }//GEN-LAST:event_btnACActionPerformed

    private void btnTrigonometricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrigonometricActionPerformed
        // TODO add your handling code here:
        
        new frmTrigonometry().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnTrigonometricActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLogarithmicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogarithmicActionPerformed
        // TODO add your handling code here:
        
        new frmLogarithmic().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnLogarithmicActionPerformed

    private void btnRadicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRadicalActionPerformed
        // TODO add your handling code here:
        
        new frmRadical().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRadicalActionPerformed

    private void btnBasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBasicActionPerformed
        // TODO add your handling code here:
        new frmBasic().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBasicActionPerformed

    private void btnBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryActionPerformed
        // TODO add your handling code here:
        
        new frmBinary().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBinaryActionPerformed

    private void btnMatAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatAActionPerformed
        // TODO add your handling code here:
        

        
        //taking input for rows and cols of matrixA
        rowsOfMatrixA = Integer.parseInt(JOptionPane.showInputDialog("Matrix A - Enter number of rows: "));
        colsOfMatrixA = Integer.parseInt(JOptionPane.showInputDialog("Matrix A - Enter number of cols: "));
        
        matrixA = new int[rowsOfMatrixA][colsOfMatrixA];
        
        
        //taking input for matrixA values
        for (int row=0; row<rowsOfMatrixA; row++)
        {
            for(int col=0;col<colsOfMatrixA;col++)
            {
                matrixA[row][col] = Integer.parseInt(JOptionPane.showInputDialog("Matrix A ["+row+","+col+"] - Enter value: "));
            }

        }
        
        //displaying matrixA
        for(int row=0 ; row<rowsOfMatrixA ; row++)
        {
            for(int col=0 ; col<colsOfMatrixA ; col++)
            {
                tfDigitScreen.setText(tfDigitScreen.getText()+" " + matrixA[row][col]);
                
            }
            tfDigitScreen.setText(tfDigitScreen.getText()+"\n");
        }
        
        btnMatA.setEnabled(false);
        btnAdd.setEnabled(true);
        btnSubtract.setEnabled(true);
        btnMultiply.setEnabled(true);
        btnEquals.setEnabled(true);
       

    }//GEN-LAST:event_btnMatAActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        // TODO add your handling code here:
        
        operator = "X";
        tfDigitScreen.setText("");
        btnMatB.setEnabled(true);
        btnMatA.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(false);
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnMatBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatBActionPerformed
        // TODO add your handling code here:
        
        //taking input for rows and cols of matrixB
        rowsOfMatrixB = Integer.parseInt(JOptionPane.showInputDialog("Matrix B - Enter number of rows: "));
        colsOfMatrixB = Integer.parseInt(JOptionPane.showInputDialog("Matrix B - Enter number of cols: "));
        
        matrixB = new int[rowsOfMatrixB][colsOfMatrixB];
        
        
        //taking input for matrixB values
        for (int row=0; row<rowsOfMatrixB; row++)
        {
            for(int col=0;col<colsOfMatrixB;col++)
            {
                matrixB[row][col] = Integer.parseInt(JOptionPane.showInputDialog("Matrix B ["+row+","+col+"] - Enter value: "));
            }

        }
        
        //displaying matrixB
        for(int row=0 ; row<rowsOfMatrixB ; row++)
        {
            for(int col=0 ; col<colsOfMatrixB ; col++)
            {
                tfDigitScreen.setText(tfDigitScreen.getText()+" " + matrixB[row][col]);
                
            }
            tfDigitScreen.setText(tfDigitScreen.getText()+"\n");
        }
        
        btnMatB.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(true);
    }//GEN-LAST:event_btnMatBActionPerformed

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        // TODO add your handling code here:
        
        tfDigitScreen.setText("");
        
        cal = new MatrixCalculator(matrixA,matrixB);
        
        if(operator=="X")
        {
        
            if(cal.getMatrixA()[0].length==cal.getMatrixB().length)
            {

                cal.Calculate(operator);

                int[][] resultantMatrix = cal.getResult();

                //displaying resultantMatrix
                for(int row=0 ; row<rowsOfMatrixA ; row++)
                {
                    for(int col=0 ; col<colsOfMatrixB ; col++)
                    {
                        tfDigitScreen.setText(tfDigitScreen.getText()+" " + resultantMatrix[row][col]);

                    }
                    tfDigitScreen.setText(tfDigitScreen.getText()+"\n");
                }

            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "For Matrix multiplication, cols of Matrix A must be equal to rows of Matrix B.");
            }
        
        }
        else
        {
            
            if(cal.getMatrixA().length==cal.getMatrixB().length && cal.getMatrixA()[0].length==cal.getMatrixB()[0].length)
            {
                cal.Calculate(operator);
        
                int[][] resultantMatrix = cal.getResult();

                //displaying resultantMatrix
                for(int row=0 ; row<rowsOfMatrixA ; row++)
                {
                    for(int col=0 ; col<colsOfMatrixB ; col++)
                    {
                        tfDigitScreen.setText(tfDigitScreen.getText()+" " + resultantMatrix[row][col]);

                    }
                    tfDigitScreen.setText(tfDigitScreen.getText()+"\n");
                }
                
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "For Matrix addition/substraction, rows and cols of Matrix A must be equal to rows and cols of Matrix B.");
            }
            
        
        
        }
        
        
        btnMatB.setEnabled(false);
        btnMatA.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(false);
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        operator = "+";
        tfDigitScreen.setText("");
        btnMatB.setEnabled(true);
        btnMatA.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(false);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtractActionPerformed
        // TODO add your handling code here:
        
        operator = "-";
        tfDigitScreen.setText("");
        btnMatB.setEnabled(true);
        btnMatA.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSubtract.setEnabled(false);
        btnMultiply.setEnabled(false);
        btnEquals.setEnabled(false);
    }//GEN-LAST:event_btnSubtractActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMatrix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMatrix().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAC;
    private javax.swing.JButton btnAdd;
    private javax.swing.JMenuItem btnBasic;
    private javax.swing.JMenuItem btnBinary;
    private javax.swing.JButton btnEquals;
    private javax.swing.JMenuItem btnExit;
    private javax.swing.JMenu btnFile;
    private javax.swing.JMenuItem btnLogarithmic;
    private javax.swing.JButton btnMatA;
    private javax.swing.JButton btnMatB;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JMenuItem btnRadical;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JMenuItem btnTrigonometric;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tfDigitScreen;
    // End of variables declaration//GEN-END:variables
}
